swagger: '2.0'
info:
  version: 1.0.0
  title: plm_beans_1
basePath: /api
paths:
  '/Users/{id}/accessTokens/{fk}':
    get:
      tags:
        - User
      summary: Find a related item by id for accessTokens.
      operationId: User.prototype.__findById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - User
      summary: Delete a related item by id for accessTokens.
      operationId: User.prototype.__destroyById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - User
      summary: Update a related item by id for accessTokens.
      operationId: User.prototype.__updateById__accessTokens
      parameters:
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
  '/Users/{id}/accessTokens':
    get:
      tags:
        - User
      summary: Queries accessTokens of User.
      operationId: User.prototype.__get__accessTokens
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessToken'
      deprecated: false
    post:
      tags:
        - User
      summary: Creates a new instance in accessTokens of this model.
      operationId: User.prototype.__create__accessTokens
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/AccessToken'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/AccessToken'
      deprecated: false
    delete:
      tags:
        - User
      summary: Deletes all accessTokens of this model.
      operationId: User.prototype.__delete__accessTokens
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Users/{id}/accessTokens/count':
    get:
      tags:
        - User
      summary: Counts accessTokens of User.
      operationId: User.prototype.__count__accessTokens
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Users:
    post:
      tags:
        - User
      summary: Create a new instance of the model and persist it into the data source.
      operationId: User.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    put:
      tags:
        - User
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: User.upsert__put_Users
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    patch:
      tags:
        - User
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: User.upsert__patch_Users
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    get:
      tags:
        - User
      summary: Find all instances of the model matched by filter from the data source.
      operationId: User.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      deprecated: false
  /Users/replaceOrCreate:
    post:
      tags:
        - User
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: User.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  /Users/upsertWithWhere:
    post:
      tags:
        - User
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: User.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  '/Users/{id}/exists':
    get:
      tags:
        - User
      summary: Check whether a model instance exists in the data source.
      operationId: 'User.exists__get_Users_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/Users/{id}':
    head:
      tags:
        - User
      summary: Check whether a model instance exists in the data source.
      operationId: 'User.exists__head_Users_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - User
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: User.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    delete:
      tags:
        - User
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: User.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - User
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'User.prototype.updateAttributes__put_Users_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/User'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
    patch:
      tags:
        - User
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'User.prototype.updateAttributes__patch_Users_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/User'
        - name: id
          in: path
          description: User id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  '/Users/{id}/replace':
    post:
      tags:
        - User
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: User.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  /Users/findOne:
    get:
      tags:
        - User
      summary: Find first instance of the model matched by filter from the data source.
      operationId: User.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/User'
      deprecated: false
  /Users/update:
    post:
      tags:
        - User
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: User.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /Users/count:
    get:
      tags:
        - User
      summary: Count instances of the model matched by where from the data source.
      operationId: User.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Users/change-stream:
    post:
      tags:
        - User
      summary: Create a change stream.
      operationId: User.createChangeStream__post_Users_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - User
      summary: Create a change stream.
      operationId: User.createChangeStream__get_Users_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /Users/login:
    post:
      tags:
        - User
      summary: Login a user with username/email and password.
      operationId: User.login
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
        - name: include
          in: query
          description: >-
            Related objects to include in the response. See the description of
            return value for more details.
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            description: >+
              The response body contains properties of the AccessToken created
              on login.

              Depending on the value of `include` parameter, the body may
              contain additional properties:

                - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)

            type: object
      deprecated: false
  /Users/logout:
    post:
      tags:
        - User
      summary: Logout a user with access token.
      operationId: User.logout
      parameters: []
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /Users/confirm:
    get:
      tags:
        - User
      summary: Confirm a user registration with email verification token.
      operationId: User.confirm
      parameters:
        - name: uid
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
        - name: redirect
          in: query
          required: false
          type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
  /Users/reset:
    post:
      tags:
        - User
      summary: Reset password for a user with email.
      operationId: User.resetPassword
      parameters:
        - name: options
          in: body
          required: true
          schema:
            type: object
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmHierarchyTypes/{id}/hierarchyLevels/{fk}':
    get:
      tags:
        - PlmHierarchyTypes
      summary: Find a related item by id for hierarchyLevels.
      operationId: PlmHierarchyTypes.prototype.__findById__hierarchyLevels
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchyLevels
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyTypes
      summary: Delete a related item by id for hierarchyLevels.
      operationId: PlmHierarchyTypes.prototype.__destroyById__hierarchyLevels
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchyLevels
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmHierarchyTypes
      summary: Update a related item by id for hierarchyLevels.
      operationId: PlmHierarchyTypes.prototype.__updateById__hierarchyLevels
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchyLevels
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  '/PlmHierarchyTypes/{id}/hierarchyLevels':
    get:
      tags:
        - PlmHierarchyTypes
      summary: Queries hierarchyLevels of PlmHierarchyTypes.
      operationId: PlmHierarchyTypes.prototype.__get__hierarchyLevels
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    post:
      tags:
        - PlmHierarchyTypes
      summary: Creates a new instance in hierarchyLevels of this model.
      operationId: PlmHierarchyTypes.prototype.__create__hierarchyLevels
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyTypes
      summary: Deletes all hierarchyLevels of this model.
      operationId: PlmHierarchyTypes.prototype.__delete__hierarchyLevels
      parameters:
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmHierarchyTypes/{id}/hierarchyLevels/count':
    get:
      tags:
        - PlmHierarchyTypes
      summary: Counts hierarchyLevels of PlmHierarchyTypes.
      operationId: PlmHierarchyTypes.prototype.__count__hierarchyLevels
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyTypes:
    post:
      tags:
        - PlmHierarchyTypes
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmHierarchyTypes.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
    put:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyTypes.upsert__put_PlmHierarchyTypes
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyTypes.upsert__patch_PlmHierarchyTypes
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
    get:
      tags:
        - PlmHierarchyTypes
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmHierarchyTypes.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
  /PlmHierarchyTypes/replaceOrCreate:
    post:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyTypes.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
  /PlmHierarchyTypes/upsertWithWhere:
    post:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmHierarchyTypes.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
  '/PlmHierarchyTypes/{id}/exists':
    get:
      tags:
        - PlmHierarchyTypes
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyTypes.exists__get_PlmHierarchyTypes_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmHierarchyTypes/{id}':
    head:
      tags:
        - PlmHierarchyTypes
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyTypes.exists__head_PlmHierarchyTypes_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmHierarchyTypes
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyTypes.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyTypes
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyTypes.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmHierarchyTypes.prototype.updateAttributes__put_PlmHierarchyTypes_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyTypes'
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmHierarchyTypes.prototype.updateAttributes__patch_PlmHierarchyTypes_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyTypes'
        - name: id
          in: path
          description: PlmHierarchyTypes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
  '/PlmHierarchyTypes/{id}/replace':
    post:
      tags:
        - PlmHierarchyTypes
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmHierarchyTypes.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
  /PlmHierarchyTypes/findOne:
    get:
      tags:
        - PlmHierarchyTypes
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmHierarchyTypes.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyTypes'
      deprecated: false
  /PlmHierarchyTypes/update:
    post:
      tags:
        - PlmHierarchyTypes
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmHierarchyTypes.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyTypes'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmHierarchyTypes/count:
    get:
      tags:
        - PlmHierarchyTypes
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmHierarchyTypes.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyTypes/change-stream:
    post:
      tags:
        - PlmHierarchyTypes
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyTypes.createChangeStream__post_PlmHierarchyTypes_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmHierarchyTypes
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyTypes.createChangeStream__get_PlmHierarchyTypes_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmHierarchyLevels/{id}/hierarchyNodes/{fk}':
    get:
      tags:
        - PlmHierarchyLevels
      summary: Find a related item by id for hierarchyNodes.
      operationId: PlmHierarchyLevels.prototype.__findById__hierarchyNodes
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchyNodes
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyLevels
      summary: Delete a related item by id for hierarchyNodes.
      operationId: PlmHierarchyLevels.prototype.__destroyById__hierarchyNodes
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchyNodes
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmHierarchyLevels
      summary: Update a related item by id for hierarchyNodes.
      operationId: PlmHierarchyLevels.prototype.__updateById__hierarchyNodes
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchyNodes
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  '/PlmHierarchyLevels/{id}/hierarchyNodes':
    get:
      tags:
        - PlmHierarchyLevels
      summary: Queries hierarchyNodes of PlmHierarchyLevels.
      operationId: PlmHierarchyLevels.prototype.__get__hierarchyNodes
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    post:
      tags:
        - PlmHierarchyLevels
      summary: Creates a new instance in hierarchyNodes of this model.
      operationId: PlmHierarchyLevels.prototype.__create__hierarchyNodes
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyLevels
      summary: Deletes all hierarchyNodes of this model.
      operationId: PlmHierarchyLevels.prototype.__delete__hierarchyNodes
      parameters:
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmHierarchyLevels/{id}/hierarchyNodes/count':
    get:
      tags:
        - PlmHierarchyLevels
      summary: Counts hierarchyNodes of PlmHierarchyLevels.
      operationId: PlmHierarchyLevels.prototype.__count__hierarchyNodes
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyLevels:
    post:
      tags:
        - PlmHierarchyLevels
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmHierarchyLevels.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    put:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyLevels.upsert__put_PlmHierarchyLevels
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyLevels.upsert__patch_PlmHierarchyLevels
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    get:
      tags:
        - PlmHierarchyLevels
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmHierarchyLevels.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  /PlmHierarchyLevels/replaceOrCreate:
    post:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyLevels.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  /PlmHierarchyLevels/upsertWithWhere:
    post:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmHierarchyLevels.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  '/PlmHierarchyLevels/{id}/exists':
    get:
      tags:
        - PlmHierarchyLevels
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyLevels.exists__get_PlmHierarchyLevels_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmHierarchyLevels/{id}':
    head:
      tags:
        - PlmHierarchyLevels
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyLevels.exists__head_PlmHierarchyLevels_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmHierarchyLevels
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyLevels.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyLevels
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyLevels.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmHierarchyLevels.prototype.updateAttributes__put_PlmHierarchyLevels_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyLevels'
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmHierarchyLevels.prototype.updateAttributes__patch_PlmHierarchyLevels_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyLevels'
        - name: id
          in: path
          description: PlmHierarchyLevels id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  '/PlmHierarchyLevels/{id}/replace':
    post:
      tags:
        - PlmHierarchyLevels
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmHierarchyLevels.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  /PlmHierarchyLevels/findOne:
    get:
      tags:
        - PlmHierarchyLevels
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmHierarchyLevels.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyLevels'
      deprecated: false
  /PlmHierarchyLevels/update:
    post:
      tags:
        - PlmHierarchyLevels
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmHierarchyLevels.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyLevels'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmHierarchyLevels/count:
    get:
      tags:
        - PlmHierarchyLevels
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmHierarchyLevels.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyLevels/change-stream:
    post:
      tags:
        - PlmHierarchyLevels
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyLevels.createChangeStream__post_PlmHierarchyLevels_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmHierarchyLevels
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyLevels.createChangeStream__get_PlmHierarchyLevels_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmHierarchyNodes/{id}/attributeGroups/{fk}':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Find a related item by id for attributeGroups.
      operationId: PlmHierarchyNodes.prototype.__findById__attributeGroups
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyNodes
      summary: Delete a related item by id for attributeGroups.
      operationId: PlmHierarchyNodes.prototype.__destroyById__attributeGroups
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmHierarchyNodes
      summary: Update a related item by id for attributeGroups.
      operationId: PlmHierarchyNodes.prototype.__updateById__attributeGroups
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrGroups'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  '/PlmHierarchyNodes/{id}/attributeGroups/rel/{fk}':
    put:
      tags:
        - PlmHierarchyNodes
      summary: Add a related item by id for attributeGroups.
      operationId: PlmHierarchyNodes.prototype.__link__attributeGroups
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyNodes
      summary: Remove the attributeGroups relation to an item by id.
      operationId: PlmHierarchyNodes.prototype.__unlink__attributeGroups
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    head:
      tags:
        - PlmHierarchyNodes
      summary: Check the existence of attributeGroups relation to an item by id.
      operationId: PlmHierarchyNodes.prototype.__exists__attributeGroups
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: boolean
      deprecated: false
  '/PlmHierarchyNodes/{id}/associations/{fk}':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Find a related item by id for associations.
      operationId: PlmHierarchyNodes.prototype.__findById__associations
      parameters:
        - name: fk
          in: path
          description: Foreign key for associations
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyNodes
      summary: Delete a related item by id for associations.
      operationId: PlmHierarchyNodes.prototype.__destroyById__associations
      parameters:
        - name: fk
          in: path
          description: Foreign key for associations
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmHierarchyNodes
      summary: Update a related item by id for associations.
      operationId: PlmHierarchyNodes.prototype.__updateById__associations
      parameters:
        - name: fk
          in: path
          description: Foreign key for associations
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  '/PlmHierarchyNodes/{id}/attributeGroups':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Queries attributeGroups of PlmHierarchyNodes.
      operationId: PlmHierarchyNodes.prototype.__get__attributeGroups
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    post:
      tags:
        - PlmHierarchyNodes
      summary: Creates a new instance in attributeGroups of this model.
      operationId: PlmHierarchyNodes.prototype.__create__attributeGroups
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrGroups'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyNodes
      summary: Deletes all attributeGroups of this model.
      operationId: PlmHierarchyNodes.prototype.__delete__attributeGroups
      parameters:
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmHierarchyNodes/{id}/attributeGroups/count':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Counts attributeGroups of PlmHierarchyNodes.
      operationId: PlmHierarchyNodes.prototype.__count__attributeGroups
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  '/PlmHierarchyNodes/{id}/associations':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Queries associations of PlmHierarchyNodes.
      operationId: PlmHierarchyNodes.prototype.__get__associations
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    post:
      tags:
        - PlmHierarchyNodes
      summary: Creates a new instance in associations of this model.
      operationId: PlmHierarchyNodes.prototype.__create__associations
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyNodes
      summary: Deletes all associations of this model.
      operationId: PlmHierarchyNodes.prototype.__delete__associations
      parameters:
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmHierarchyNodes/{id}/associations/count':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Counts associations of PlmHierarchyNodes.
      operationId: PlmHierarchyNodes.prototype.__count__associations
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyNodes:
    post:
      tags:
        - PlmHierarchyNodes
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmHierarchyNodes.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    put:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyNodes.upsert__put_PlmHierarchyNodes
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyNodes.upsert__patch_PlmHierarchyNodes
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    get:
      tags:
        - PlmHierarchyNodes
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmHierarchyNodes.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  /PlmHierarchyNodes/replaceOrCreate:
    post:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyNodes.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  /PlmHierarchyNodes/upsertWithWhere:
    post:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmHierarchyNodes.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  '/PlmHierarchyNodes/{id}/exists':
    get:
      tags:
        - PlmHierarchyNodes
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyNodes.exists__get_PlmHierarchyNodes_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmHierarchyNodes/{id}':
    head:
      tags:
        - PlmHierarchyNodes
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyNodes.exists__head_PlmHierarchyNodes_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmHierarchyNodes
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyNodes.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyNodes
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyNodes.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmHierarchyNodes.prototype.updateAttributes__put_PlmHierarchyNodes_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmHierarchyNodes.prototype.updateAttributes__patch_PlmHierarchyNodes_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmHierarchyNodes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  '/PlmHierarchyNodes/{id}/replace':
    post:
      tags:
        - PlmHierarchyNodes
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmHierarchyNodes.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  /PlmHierarchyNodes/findOne:
    get:
      tags:
        - PlmHierarchyNodes
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmHierarchyNodes.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  /PlmHierarchyNodes/update:
    post:
      tags:
        - PlmHierarchyNodes
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmHierarchyNodes.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyNodes'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmHierarchyNodes/count:
    get:
      tags:
        - PlmHierarchyNodes
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmHierarchyNodes.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyNodes/change-stream:
    post:
      tags:
        - PlmHierarchyNodes
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyNodes.createChangeStream__post_PlmHierarchyNodes_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmHierarchyNodes
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyNodes.createChangeStream__get_PlmHierarchyNodes_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmHierarchyNodes/{name}/metadata':
    get:
      tags:
        - PlmHierarchyNodes
      summary: >-
        List Metadata. Include the related Attribute Groups and Attributes
        information
      operationId: PlmHierarchyNodes.getMetadata
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Plmhierarchynodes:
                type: array
                items:
                  type: object
      deprecated: false
  '/PlmAttrGroups/{id}/attrGroupHierarchies/{fk}':
    get:
      tags:
        - PlmAttrGroups
      summary: Find a related item by id for attrGroupHierarchies.
      operationId: PlmAttrGroups.prototype.__findById__attrGroupHierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for attrGroupHierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Delete a related item by id for attrGroupHierarchies.
      operationId: PlmAttrGroups.prototype.__destroyById__attrGroupHierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for attrGroupHierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmAttrGroups
      summary: Update a related item by id for attrGroupHierarchies.
      operationId: PlmAttrGroups.prototype.__updateById__attrGroupHierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for attrGroupHierarchies
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  '/PlmAttrGroups/{id}/attrGroupHierarchies/rel/{fk}':
    put:
      tags:
        - PlmAttrGroups
      summary: Add a related item by id for attrGroupHierarchies.
      operationId: PlmAttrGroups.prototype.__link__attrGroupHierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for attrGroupHierarchies
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrGroupsPlmHierarchyNodes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroupsPlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Remove the attrGroupHierarchies relation to an item by id.
      operationId: PlmAttrGroups.prototype.__unlink__attrGroupHierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for attrGroupHierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    head:
      tags:
        - PlmAttrGroups
      summary: Check the existence of attrGroupHierarchies relation to an item by id.
      operationId: PlmAttrGroups.prototype.__exists__attrGroupHierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for attrGroupHierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: boolean
      deprecated: false
  '/PlmAttrGroups/{id}/attributes/{fk}':
    get:
      tags:
        - PlmAttrGroups
      summary: Find a related item by id for attributes.
      operationId: PlmAttrGroups.prototype.__findById__attributes
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributes
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Delete a related item by id for attributes.
      operationId: PlmAttrGroups.prototype.__destroyById__attributes
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributes
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmAttrGroups
      summary: Update a related item by id for attributes.
      operationId: PlmAttrGroups.prototype.__updateById__attributes
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributes
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttributes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
  '/PlmAttrGroups/{id}/hierarchies/{fk}':
    get:
      tags:
        - PlmAttrGroups
      summary: Find a related item by id for hierarchies.
      operationId: PlmAttrGroups.prototype.__findById__hierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Delete a related item by id for hierarchies.
      operationId: PlmAttrGroups.prototype.__destroyById__hierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmAttrGroups
      summary: Update a related item by id for hierarchies.
      operationId: PlmAttrGroups.prototype.__updateById__hierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchies
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  '/PlmAttrGroups/{id}/hierarchies/rel/{fk}':
    put:
      tags:
        - PlmAttrGroups
      summary: Add a related item by id for hierarchies.
      operationId: PlmAttrGroups.prototype.__link__hierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchies
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Remove the hierarchies relation to an item by id.
      operationId: PlmAttrGroups.prototype.__unlink__hierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    head:
      tags:
        - PlmAttrGroups
      summary: Check the existence of hierarchies relation to an item by id.
      operationId: PlmAttrGroups.prototype.__exists__hierarchies
      parameters:
        - name: fk
          in: path
          description: Foreign key for hierarchies
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: boolean
      deprecated: false
  '/PlmAttrGroups/{id}/attrGroupHierarchies':
    get:
      tags:
        - PlmAttrGroups
      summary: Queries attrGroupHierarchies of PlmAttrGroups.
      operationId: PlmAttrGroups.prototype.__get__attrGroupHierarchies
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    post:
      tags:
        - PlmAttrGroups
      summary: Creates a new instance in attrGroupHierarchies of this model.
      operationId: PlmAttrGroups.prototype.__create__attrGroupHierarchies
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Deletes all attrGroupHierarchies of this model.
      operationId: PlmAttrGroups.prototype.__delete__attrGroupHierarchies
      parameters:
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmAttrGroups/{id}/attrGroupHierarchies/count':
    get:
      tags:
        - PlmAttrGroups
      summary: Counts attrGroupHierarchies of PlmAttrGroups.
      operationId: PlmAttrGroups.prototype.__count__attrGroupHierarchies
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  '/PlmAttrGroups/{id}/attributes':
    get:
      tags:
        - PlmAttrGroups
      summary: Queries attributes of PlmAttrGroups.
      operationId: PlmAttrGroups.prototype.__get__attributes
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttributes'
      deprecated: false
    post:
      tags:
        - PlmAttrGroups
      summary: Creates a new instance in attributes of this model.
      operationId: PlmAttrGroups.prototype.__create__attributes
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttributes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Deletes all attributes of this model.
      operationId: PlmAttrGroups.prototype.__delete__attributes
      parameters:
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmAttrGroups/{id}/attributes/count':
    get:
      tags:
        - PlmAttrGroups
      summary: Counts attributes of PlmAttrGroups.
      operationId: PlmAttrGroups.prototype.__count__attributes
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  '/PlmAttrGroups/{id}/hierarchies':
    get:
      tags:
        - PlmAttrGroups
      summary: Queries hierarchies of PlmAttrGroups.
      operationId: PlmAttrGroups.prototype.__get__hierarchies
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    post:
      tags:
        - PlmAttrGroups
      summary: Creates a new instance in hierarchies of this model.
      operationId: PlmAttrGroups.prototype.__create__hierarchies
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: Deletes all hierarchies of this model.
      operationId: PlmAttrGroups.prototype.__delete__hierarchies
      parameters:
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmAttrGroups/{id}/hierarchies/count':
    get:
      tags:
        - PlmAttrGroups
      summary: Counts hierarchies of PlmAttrGroups.
      operationId: PlmAttrGroups.prototype.__count__hierarchies
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmAttrGroups:
    post:
      tags:
        - PlmAttrGroups
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmAttrGroups.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    put:
      tags:
        - PlmAttrGroups
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrGroups.upsert__put_PlmAttrGroups
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    patch:
      tags:
        - PlmAttrGroups
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrGroups.upsert__patch_PlmAttrGroups
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    get:
      tags:
        - PlmAttrGroups
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmAttrGroups.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  /PlmAttrGroups/replaceOrCreate:
    post:
      tags:
        - PlmAttrGroups
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrGroups.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  /PlmAttrGroups/upsertWithWhere:
    post:
      tags:
        - PlmAttrGroups
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmAttrGroups.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  '/PlmAttrGroups/{id}/exists':
    get:
      tags:
        - PlmAttrGroups
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttrGroups.exists__get_PlmAttrGroups_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmAttrGroups/{id}':
    head:
      tags:
        - PlmAttrGroups
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttrGroups.exists__head_PlmAttrGroups_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmAttrGroups
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmAttrGroups.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    delete:
      tags:
        - PlmAttrGroups
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmAttrGroups.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmAttrGroups
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmAttrGroups.prototype.updateAttributes__put_PlmAttrGroups_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrGroups'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    patch:
      tags:
        - PlmAttrGroups
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmAttrGroups.prototype.updateAttributes__patch_PlmAttrGroups_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrGroups'
        - name: id
          in: path
          description: PlmAttrGroups id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  '/PlmAttrGroups/{id}/replace':
    post:
      tags:
        - PlmAttrGroups
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmAttrGroups.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  /PlmAttrGroups/findOne:
    get:
      tags:
        - PlmAttrGroups
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmAttrGroups.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  /PlmAttrGroups/update:
    post:
      tags:
        - PlmAttrGroups
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmAttrGroups.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrGroups'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmAttrGroups/count:
    get:
      tags:
        - PlmAttrGroups
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmAttrGroups.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmAttrGroups/change-stream:
    post:
      tags:
        - PlmAttrGroups
      summary: Create a change stream.
      operationId: PlmAttrGroups.createChangeStream__post_PlmAttrGroups_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmAttrGroups
      summary: Create a change stream.
      operationId: PlmAttrGroups.createChangeStream__get_PlmAttrGroups_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmAttributes/{id}/valueSets':
    get:
      tags:
        - PlmAttributes
      summary: Fetches belongsTo relation valueSets.
      operationId: PlmAttributes.prototype.__get__valueSets
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PlmAttributes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  /PlmAttributes:
    post:
      tags:
        - PlmAttributes
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmAttributes.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    put:
      tags:
        - PlmAttributes
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttributes.upsert__put_PlmAttributes
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    patch:
      tags:
        - PlmAttributes
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttributes.upsert__patch_PlmAttributes
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    get:
      tags:
        - PlmAttributes
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmAttributes.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttributes'
      deprecated: false
  /PlmAttributes/replaceOrCreate:
    post:
      tags:
        - PlmAttributes
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttributes.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
  /PlmAttributes/upsertWithWhere:
    post:
      tags:
        - PlmAttributes
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmAttributes.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
  '/PlmAttributes/{id}/exists':
    get:
      tags:
        - PlmAttributes
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttributes.exists__get_PlmAttributes_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmAttributes/{id}':
    head:
      tags:
        - PlmAttributes
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttributes.exists__head_PlmAttributes_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmAttributes
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmAttributes.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    delete:
      tags:
        - PlmAttributes
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmAttributes.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmAttributes
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmAttributes.prototype.updateAttributes__put_PlmAttributes_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttributes'
        - name: id
          in: path
          description: PlmAttributes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
    patch:
      tags:
        - PlmAttributes
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmAttributes.prototype.updateAttributes__patch_PlmAttributes_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttributes'
        - name: id
          in: path
          description: PlmAttributes id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
  '/PlmAttributes/{id}/replace':
    post:
      tags:
        - PlmAttributes
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmAttributes.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
  /PlmAttributes/findOne:
    get:
      tags:
        - PlmAttributes
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmAttributes.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttributes'
      deprecated: false
  /PlmAttributes/update:
    post:
      tags:
        - PlmAttributes
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmAttributes.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttributes'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmAttributes/count:
    get:
      tags:
        - PlmAttributes
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmAttributes.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmAttributes/change-stream:
    post:
      tags:
        - PlmAttributes
      summary: Create a change stream.
      operationId: PlmAttributes.createChangeStream__post_PlmAttributes_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmAttributes
      summary: Create a change stream.
      operationId: PlmAttributes.createChangeStream__get_PlmAttributes_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmAttrValueSets/{id}/values/{fk}':
    get:
      tags:
        - PlmAttrValueSets
      summary: Find a related item by id for values.
      operationId: PlmAttrValueSets.prototype.__findById__values
      parameters:
        - name: fk
          in: path
          description: Foreign key for values
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    delete:
      tags:
        - PlmAttrValueSets
      summary: Delete a related item by id for values.
      operationId: PlmAttrValueSets.prototype.__destroyById__values
      parameters:
        - name: fk
          in: path
          description: Foreign key for values
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmAttrValueSets
      summary: Update a related item by id for values.
      operationId: PlmAttrValueSets.prototype.__updateById__values
      parameters:
        - name: fk
          in: path
          description: Foreign key for values
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  '/PlmAttrValueSets/{id}/values':
    get:
      tags:
        - PlmAttrValueSets
      summary: Queries values of PlmAttrValueSets.
      operationId: PlmAttrValueSets.prototype.__get__values
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    post:
      tags:
        - PlmAttrValueSets
      summary: Creates a new instance in values of this model.
      operationId: PlmAttrValueSets.prototype.__create__values
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    delete:
      tags:
        - PlmAttrValueSets
      summary: Deletes all values of this model.
      operationId: PlmAttrValueSets.prototype.__delete__values
      parameters:
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmAttrValueSets/{id}/values/count':
    get:
      tags:
        - PlmAttrValueSets
      summary: Counts values of PlmAttrValueSets.
      operationId: PlmAttrValueSets.prototype.__count__values
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmAttrValueSets:
    post:
      tags:
        - PlmAttrValueSets
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmAttrValueSets.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
    put:
      tags:
        - PlmAttrValueSets
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrValueSets.upsert__put_PlmAttrValueSets
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
    patch:
      tags:
        - PlmAttrValueSets
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrValueSets.upsert__patch_PlmAttrValueSets
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
    get:
      tags:
        - PlmAttrValueSets
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmAttrValueSets.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  /PlmAttrValueSets/replaceOrCreate:
    post:
      tags:
        - PlmAttrValueSets
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrValueSets.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  /PlmAttrValueSets/upsertWithWhere:
    post:
      tags:
        - PlmAttrValueSets
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmAttrValueSets.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  '/PlmAttrValueSets/{id}/exists':
    get:
      tags:
        - PlmAttrValueSets
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttrValueSets.exists__get_PlmAttrValueSets_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmAttrValueSets/{id}':
    head:
      tags:
        - PlmAttrValueSets
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttrValueSets.exists__head_PlmAttrValueSets_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmAttrValueSets
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmAttrValueSets.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
    delete:
      tags:
        - PlmAttrValueSets
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmAttrValueSets.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmAttrValueSets
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmAttrValueSets.prototype.updateAttributes__put_PlmAttrValueSets_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSets'
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
    patch:
      tags:
        - PlmAttrValueSets
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'PlmAttrValueSets.prototype.updateAttributes__patch_PlmAttrValueSets_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSets'
        - name: id
          in: path
          description: PlmAttrValueSets id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  '/PlmAttrValueSets/{id}/replace':
    post:
      tags:
        - PlmAttrValueSets
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmAttrValueSets.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  /PlmAttrValueSets/findOne:
    get:
      tags:
        - PlmAttrValueSets
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmAttrValueSets.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSets'
      deprecated: false
  /PlmAttrValueSets/update:
    post:
      tags:
        - PlmAttrValueSets
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmAttrValueSets.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSets'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmAttrValueSets/count:
    get:
      tags:
        - PlmAttrValueSets
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmAttrValueSets.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmAttrValueSets/change-stream:
    post:
      tags:
        - PlmAttrValueSets
      summary: Create a change stream.
      operationId: PlmAttrValueSets.createChangeStream__post_PlmAttrValueSets_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmAttrValueSets
      summary: Create a change stream.
      operationId: PlmAttrValueSets.createChangeStream__get_PlmAttrValueSets_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /PlmAttrValueSetValues:
    post:
      tags:
        - PlmAttrValueSetValues
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmAttrValueSetValues.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    put:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrValueSetValues.upsert__put_PlmAttrValueSetValues
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    patch:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrValueSetValues.upsert__patch_PlmAttrValueSetValues
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    get:
      tags:
        - PlmAttrValueSetValues
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmAttrValueSetValues.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  /PlmAttrValueSetValues/replaceOrCreate:
    post:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmAttrValueSetValues.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  /PlmAttrValueSetValues/upsertWithWhere:
    post:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmAttrValueSetValues.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  '/PlmAttrValueSetValues/{id}/exists':
    get:
      tags:
        - PlmAttrValueSetValues
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttrValueSetValues.exists__get_PlmAttrValueSetValues_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmAttrValueSetValues/{id}':
    head:
      tags:
        - PlmAttrValueSetValues
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmAttrValueSetValues.exists__head_PlmAttrValueSetValues_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmAttrValueSetValues
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmAttrValueSetValues.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    delete:
      tags:
        - PlmAttrValueSetValues
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmAttrValueSetValues.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmAttrValueSetValues.prototype.updateAttributes__put_PlmAttrValueSetValues_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSetValues'
        - name: id
          in: path
          description: PlmAttrValueSetValues id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
    patch:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmAttrValueSetValues.prototype.updateAttributes__patch_PlmAttrValueSetValues_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSetValues'
        - name: id
          in: path
          description: PlmAttrValueSetValues id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  '/PlmAttrValueSetValues/{id}/replace':
    post:
      tags:
        - PlmAttrValueSetValues
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmAttrValueSetValues.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  /PlmAttrValueSetValues/findOne:
    get:
      tags:
        - PlmAttrValueSetValues
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmAttrValueSetValues.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrValueSetValues'
      deprecated: false
  /PlmAttrValueSetValues/update:
    post:
      tags:
        - PlmAttrValueSetValues
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmAttrValueSetValues.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmAttrValueSetValues'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmAttrValueSetValues/count:
    get:
      tags:
        - PlmAttrValueSetValues
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmAttrValueSetValues.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmAttrValueSetValues/change-stream:
    post:
      tags:
        - PlmAttrValueSetValues
      summary: Create a change stream.
      operationId: >-
        PlmAttrValueSetValues.createChangeStream__post_PlmAttrValueSetValues_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmAttrValueSetValues
      summary: Create a change stream.
      operationId: >-
        PlmAttrValueSetValues.createChangeStream__get_PlmAttrValueSetValues_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/attributeGroups1/{fk}':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Find a related item by id for attributeGroups1.
      operationId: PlmHierarchyAgAssoc.prototype.__findById__attributeGroups1
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups1
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyAgAssoc
      summary: Delete a related item by id for attributeGroups1.
      operationId: PlmHierarchyAgAssoc.prototype.__destroyById__attributeGroups1
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups1
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - PlmHierarchyAgAssoc
      summary: Update a related item by id for attributeGroups1.
      operationId: PlmHierarchyAgAssoc.prototype.__updateById__attributeGroups1
      parameters:
        - name: fk
          in: path
          description: Foreign key for attributeGroups1
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrGroups'
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/attributeGroup':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Fetches belongsTo relation attributeGroup.
      operationId: PlmHierarchyAgAssoc.prototype.__get__attributeGroup
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/hierarchy':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Fetches belongsTo relation hierarchy.
      operationId: PlmHierarchyAgAssoc.prototype.__get__hierarchy
      parameters:
        - name: refresh
          in: query
          required: false
          type: boolean
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyNodes'
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/attributeGroups1':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Queries attributeGroups1 of PlmHierarchyAgAssoc.
      operationId: PlmHierarchyAgAssoc.prototype.__get__attributeGroups1
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: Creates a new instance in attributeGroups1 of this model.
      operationId: PlmHierarchyAgAssoc.prototype.__create__attributeGroups1
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/PlmAttrGroups'
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmAttrGroups'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyAgAssoc
      summary: Deletes all attributeGroups1 of this model.
      operationId: PlmHierarchyAgAssoc.prototype.__delete__attributeGroups1
      parameters:
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/attributeGroups1/count':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Counts attributeGroups1 of PlmHierarchyAgAssoc.
      operationId: PlmHierarchyAgAssoc.prototype.__count__attributeGroups1
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyAgAssocs:
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmHierarchyAgAssoc.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    put:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyAgAssoc.upsert__put_PlmHierarchyAgAssocs
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyAgAssoc.upsert__patch_PlmHierarchyAgAssocs
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmHierarchyAgAssoc.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  /PlmHierarchyAgAssocs/replaceOrCreate:
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmHierarchyAgAssoc.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  /PlmHierarchyAgAssocs/upsertWithWhere:
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmHierarchyAgAssoc.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/exists':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyAgAssoc.exists__get_PlmHierarchyAgAssocs_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}':
    head:
      tags:
        - PlmHierarchyAgAssoc
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmHierarchyAgAssoc.exists__head_PlmHierarchyAgAssocs_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyAgAssoc.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    delete:
      tags:
        - PlmHierarchyAgAssoc
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmHierarchyAgAssoc.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmHierarchyAgAssoc.prototype.updateAttributes__put_PlmHierarchyAgAssocs_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyAgAssoc'
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
    patch:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmHierarchyAgAssoc.prototype.updateAttributes__patch_PlmHierarchyAgAssocs_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyAgAssoc'
        - name: id
          in: path
          description: PlmHierarchyAgAssoc id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/replace':
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmHierarchyAgAssoc.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  /PlmHierarchyAgAssocs/findOne:
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmHierarchyAgAssoc.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      deprecated: false
  /PlmHierarchyAgAssocs/update:
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmHierarchyAgAssoc.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmHierarchyAgAssoc'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmHierarchyAgAssocs/count:
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmHierarchyAgAssoc.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmHierarchyAgAssocs/change-stream:
    post:
      tags:
        - PlmHierarchyAgAssoc
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyAgAssoc.createChangeStream__post_PlmHierarchyAgAssocs_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: Create a change stream.
      operationId: >-
        PlmHierarchyAgAssoc.createChangeStream__get_PlmHierarchyAgAssocs_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  '/PlmHierarchyAgAssocs/{id}/metadata':
    get:
      tags:
        - PlmHierarchyAgAssoc
      summary: >-
        List Metadata. Include the related Attribute Groups and Attributes
        information
      operationId: PlmHierarchyAgAssoc.getMetadata
      parameters:
        - name: id
          in: path
          required: true
          type: number
          format: double
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Plmhierarchyagassoc:
                type: array
                items:
                  type: object
      deprecated: false
  /PlmFlexibleEntities:
    post:
      tags:
        - PlmFlexibleEntities
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmFlexibleEntities.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
    put:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntities.upsert__put_PlmFlexibleEntities
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
    patch:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntities.upsert__patch_PlmFlexibleEntities
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntities
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmFlexibleEntities.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
  /PlmFlexibleEntities/replaceOrCreate:
    post:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntities.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
  /PlmFlexibleEntities/upsertWithWhere:
    post:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmFlexibleEntities.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
  '/PlmFlexibleEntities/{id}/exists':
    get:
      tags:
        - PlmFlexibleEntities
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmFlexibleEntities.exists__get_PlmFlexibleEntities_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmFlexibleEntities/{id}':
    head:
      tags:
        - PlmFlexibleEntities
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmFlexibleEntities.exists__head_PlmFlexibleEntities_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntities
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmFlexibleEntities.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
    delete:
      tags:
        - PlmFlexibleEntities
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmFlexibleEntities.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmFlexibleEntities.prototype.updateAttributes__put_PlmFlexibleEntities_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntities'
        - name: id
          in: path
          description: PlmFlexibleEntities id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
    patch:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmFlexibleEntities.prototype.updateAttributes__patch_PlmFlexibleEntities_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntities'
        - name: id
          in: path
          description: PlmFlexibleEntities id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
  '/PlmFlexibleEntities/{id}/replace':
    post:
      tags:
        - PlmFlexibleEntities
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmFlexibleEntities.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
  /PlmFlexibleEntities/findOne:
    get:
      tags:
        - PlmFlexibleEntities
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmFlexibleEntities.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntities'
      deprecated: false
  /PlmFlexibleEntities/update:
    post:
      tags:
        - PlmFlexibleEntities
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmFlexibleEntities.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntities'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmFlexibleEntities/count:
    get:
      tags:
        - PlmFlexibleEntities
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmFlexibleEntities.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmFlexibleEntities/change-stream:
    post:
      tags:
        - PlmFlexibleEntities
      summary: Create a change stream.
      operationId: >-
        PlmFlexibleEntities.createChangeStream__post_PlmFlexibleEntities_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntities
      summary: Create a change stream.
      operationId: >-
        PlmFlexibleEntities.createChangeStream__get_PlmFlexibleEntities_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /PlmFlexibleEntitiesColumns:
    post:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmFlexibleEntitiesColumns.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
    put:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntitiesColumns.upsert__put_PlmFlexibleEntitiesColumns
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
    patch:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntitiesColumns.upsert__patch_PlmFlexibleEntitiesColumns
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmFlexibleEntitiesColumns.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
  /PlmFlexibleEntitiesColumns/replaceOrCreate:
    post:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntitiesColumns.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
  /PlmFlexibleEntitiesColumns/upsertWithWhere:
    post:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmFlexibleEntitiesColumns.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
  '/PlmFlexibleEntitiesColumns/{id}/exists':
    get:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Check whether a model instance exists in the data source.
      operationId: >-
        PlmFlexibleEntitiesColumns.exists__get_PlmFlexibleEntitiesColumns_{id}_exists
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmFlexibleEntitiesColumns/{id}':
    head:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmFlexibleEntitiesColumns.exists__head_PlmFlexibleEntitiesColumns_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmFlexibleEntitiesColumns.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
    delete:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmFlexibleEntitiesColumns.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmFlexibleEntitiesColumns.prototype.updateAttributes__put_PlmFlexibleEntitiesColumns_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
        - name: id
          in: path
          description: PlmFlexibleEntitiesColumns id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
    patch:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmFlexibleEntitiesColumns.prototype.updateAttributes__patch_PlmFlexibleEntitiesColumns_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
        - name: id
          in: path
          description: PlmFlexibleEntitiesColumns id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
  '/PlmFlexibleEntitiesColumns/{id}/replace':
    post:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmFlexibleEntitiesColumns.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
  /PlmFlexibleEntitiesColumns/findOne:
    get:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmFlexibleEntitiesColumns.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      deprecated: false
  /PlmFlexibleEntitiesColumns/update:
    post:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmFlexibleEntitiesColumns.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntitiesColumns'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmFlexibleEntitiesColumns/count:
    get:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmFlexibleEntitiesColumns.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmFlexibleEntitiesColumns/change-stream:
    post:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Create a change stream.
      operationId: >-
        PlmFlexibleEntitiesColumns.createChangeStream__post_PlmFlexibleEntitiesColumns_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntitiesColumns
      summary: Create a change stream.
      operationId: >-
        PlmFlexibleEntitiesColumns.createChangeStream__get_PlmFlexibleEntitiesColumns_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /PlmFlexibleEntityValues:
    post:
      tags:
        - PlmFlexibleEntityValues
      summary: Create a new instance of the model and persist it into the data source.
      operationId: PlmFlexibleEntityValues.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
    put:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntityValues.upsert__put_PlmFlexibleEntityValues
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
    patch:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntityValues.upsert__patch_PlmFlexibleEntityValues
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntityValues
      summary: Find all instances of the model matched by filter from the data source.
      operationId: PlmFlexibleEntityValues.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
  /PlmFlexibleEntityValues/replaceOrCreate:
    post:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: PlmFlexibleEntityValues.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
  /PlmFlexibleEntityValues/upsertWithWhere:
    post:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: PlmFlexibleEntityValues.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
  '/PlmFlexibleEntityValues/{id}/exists':
    get:
      tags:
        - PlmFlexibleEntityValues
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmFlexibleEntityValues.exists__get_PlmFlexibleEntityValues_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/PlmFlexibleEntityValues/{id}':
    head:
      tags:
        - PlmFlexibleEntityValues
      summary: Check whether a model instance exists in the data source.
      operationId: 'PlmFlexibleEntityValues.exists__head_PlmFlexibleEntityValues_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntityValues
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: PlmFlexibleEntityValues.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
    delete:
      tags:
        - PlmFlexibleEntityValues
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: PlmFlexibleEntityValues.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmFlexibleEntityValues.prototype.updateAttributes__put_PlmFlexibleEntityValues_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntityValues'
        - name: id
          in: path
          description: PlmFlexibleEntityValues id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
    patch:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        PlmFlexibleEntityValues.prototype.updateAttributes__patch_PlmFlexibleEntityValues_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntityValues'
        - name: id
          in: path
          description: PlmFlexibleEntityValues id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
  '/PlmFlexibleEntityValues/{id}/replace':
    post:
      tags:
        - PlmFlexibleEntityValues
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: PlmFlexibleEntityValues.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
  /PlmFlexibleEntityValues/findOne:
    get:
      tags:
        - PlmFlexibleEntityValues
      summary: Find first instance of the model matched by filter from the data source.
      operationId: PlmFlexibleEntityValues.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/PlmFlexibleEntityValues'
      deprecated: false
  /PlmFlexibleEntityValues/update:
    post:
      tags:
        - PlmFlexibleEntityValues
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: PlmFlexibleEntityValues.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/PlmFlexibleEntityValues'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /PlmFlexibleEntityValues/count:
    get:
      tags:
        - PlmFlexibleEntityValues
      summary: Count instances of the model matched by where from the data source.
      operationId: PlmFlexibleEntityValues.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /PlmFlexibleEntityValues/change-stream:
    post:
      tags:
        - PlmFlexibleEntityValues
      summary: Create a change stream.
      operationId: >-
        PlmFlexibleEntityValues.createChangeStream__post_PlmFlexibleEntityValues_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - PlmFlexibleEntityValues
      summary: Create a change stream.
      operationId: >-
        PlmFlexibleEntityValues.createChangeStream__get_PlmFlexibleEntityValues_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
  /plmProductEntities:
    post:
      tags:
        - plmProductEntity
      summary: Create a new instance of the model and persist it into the data source.
      operationId: plmProductEntity.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
    put:
      tags:
        - plmProductEntity
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: plmProductEntity.upsert__put_plmProductEntities
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
    patch:
      tags:
        - plmProductEntity
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: plmProductEntity.upsert__patch_plmProductEntities
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
    get:
      tags:
        - plmProductEntity
      summary: Find all instances of the model matched by filter from the data source.
      operationId: plmProductEntity.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/plmProductEntity'
      deprecated: false
  /plmProductEntities/replaceOrCreate:
    post:
      tags:
        - plmProductEntity
      summary: >-
        Replace an existing model instance or insert a new one into the data
        source.
      operationId: plmProductEntity.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
  /plmProductEntities/upsertWithWhere:
    post:
      tags:
        - plmProductEntity
      summary: >-
        Update an existing model instance or insert a new one into the data
        source based on the where criteria.
      operationId: plmProductEntity.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
  '/plmProductEntities/{id}/exists':
    get:
      tags:
        - plmProductEntity
      summary: Check whether a model instance exists in the data source.
      operationId: 'plmProductEntity.exists__get_plmProductEntities_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/plmProductEntities/{id}':
    head:
      tags:
        - plmProductEntity
      summary: Check whether a model instance exists in the data source.
      operationId: 'plmProductEntity.exists__head_plmProductEntities_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - plmProductEntity
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: plmProductEntity.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
    delete:
      tags:
        - plmProductEntity
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: plmProductEntity.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - plmProductEntity
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: 'plmProductEntity.prototype.updateAttributes__put_plmProductEntities_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/plmProductEntity'
        - name: id
          in: path
          description: plmProductEntity id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
    patch:
      tags:
        - plmProductEntity
      summary: >-
        Patch attributes for a model instance and persist it into the data
        source.
      operationId: >-
        plmProductEntity.prototype.updateAttributes__patch_plmProductEntities_{id}
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/plmProductEntity'
        - name: id
          in: path
          description: plmProductEntity id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
  '/plmProductEntities/{id}/replace':
    post:
      tags:
        - plmProductEntity
      summary: >-
        Replace attributes for a model instance and persist it into the data
        source.
      operationId: plmProductEntity.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
  /plmProductEntities/findOne:
    get:
      tags:
        - plmProductEntity
      summary: Find first instance of the model matched by filter from the data source.
      operationId: plmProductEntity.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/plmProductEntity'
      deprecated: false
  /plmProductEntities/update:
    post:
      tags:
        - plmProductEntity
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: plmProductEntity.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/plmProductEntity'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /plmProductEntities/count:
    get:
      tags:
        - plmProductEntity
      summary: Count instances of the model matched by where from the data source.
      operationId: plmProductEntity.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /plmProductEntities/change-stream:
    post:
      tags:
        - plmProductEntity
      summary: Create a change stream.
      operationId: >-
        plmProductEntity.createChangeStream__post_plmProductEntities_change-stream
      parameters:
        - name: options
          in: formData
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
    get:
      tags:
        - plmProductEntity
      summary: Create a change stream.
      operationId: >-
        plmProductEntity.createChangeStream__get_plmProductEntities_change-stream
      parameters:
        - name: options
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: file
      deprecated: false
tags:
  - name: User
  - name: PlmHierarchyTypes
  - name: PlmHierarchyLevels
  - name: PlmHierarchyNodes
  - name: PlmAttrGroups
  - name: PlmAttributes
  - name: PlmAttrValueSets
  - name: PlmAttrValueSetValues
  - name: PlmHierarchyAgAssoc
  - name: PlmFlexibleEntities
  - name: PlmFlexibleEntitiesColumns
  - name: PlmFlexibleEntityValues
  - name: plmProductEntity
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - application/xml
  - text/xml
produces:
  - application/json
  - application/xml
  - text/xml
  - application/javascript
  - text/javascript
definitions:
  x-any:
    properties: {}
  AccessToken:
    properties:
      id:
        type: string
      ttl:
        default: 1209600
        description: time to live in seconds (2 weeks by default)
        type: number
        format: double
      created:
        type: string
        format: date
      userId:
        type: number
        format: double
    required:
      - id
    additionalProperties: false
  User:
    properties:
      realm:
        type: string
      username:
        type: string
      credentials:
        type: object
      challenges:
        type: object
      email:
        type: string
      emailVerified:
        type: boolean
      status:
        type: string
      created:
        type: string
        format: date
      lastUpdated:
        type: string
        format: date
      id:
        type: number
        format: double
    required:
      - email
    additionalProperties: false
  PlmHierarchyLevels:
    properties:
      hierarchyLevelName:
        type: string
      hierarchyTypeFkId:
        type: number
        format: double
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - hierarchyLevelName
      - hierarchyTypeFkId
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmHierarchyTypes:
    properties:
      hierarchyType:
        type: string
      isAttributeHierarchy:
        type: boolean
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - hierarchyType
      - isAttributeHierarchy
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmHierarchyNodes:
    properties:
      hierarchyName:
        type: string
      uniqueKey:
        type: string
      categoryNumber:
        type: string
      parentHierarchyId:
        type: number
        format: double
      hierarchyTypeFkId:
        type: number
        format: double
      hierarchyLevelFkId:
        type: number
        format: double
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - hierarchyName
      - hierarchyTypeFkId
      - hierarchyLevelFkId
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmAttrGroups:
    properties:
      attrGroupDispName:
        type: string
      attrGroupIntName:
        type: string
      attrGroupBehaviour:
        default: Single Row
        enum:
          - Single Row
          - Multi Row
          - Variant
        type: string
      attrGroupType:
        default: Dynamic
        enum:
          - Product Level
          - Dynamic
        type: string
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - attrGroupDispName
      - attrGroupIntName
      - attrGroupBehaviour
      - attrGroupType
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmHierarchyAgAssoc:
    properties:
      attrGroupId:
        type: number
        format: double
      hierarchyNodeId:
        type: number
        format: double
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - attrGroupId
      - hierarchyNodeId
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmAttrGroupsPlmHierarchyNodes:
    properties:
      id:
        type: number
        format: double
      plmAttrGroupsId:
        type: number
        format: double
      plmHierarchyNodesId:
        type: number
        format: double
    additionalProperties: false
  PlmAttributes:
    properties:
      attrDispName:
        type: string
      attrIntName:
        type: string
      dataType:
        enum:
          - string
          - number
          - date
        type: string
      valueSetId:
        type: number
        format: double
      dbColumnName:
        enum:
          - string1
          - string2
          - string3
          - string4
          - string5
          - string6
          - string7
          - string8
          - string9
          - string10
          - number1
          - number2
          - number3
          - number4
          - number5
          - number6
          - number7
          - number8
          - number9
          - number10
          - date1
          - date2
          - date3
          - date4
          - date5
          - date6
          - date7
          - date8
          - date9
          - date10
        type: string
      uniqueKeyFlag:
        type: boolean
      requiredFlag:
        type: boolean
      defaultValue:
        type: string
      attrGroupId:
        type: number
        format: double
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - attrDispName
      - attrIntName
      - dataType
      - dbColumnName
      - requiredFlag
      - attrGroupId
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmAttrValueSets:
    properties:
      valueSetName:
        type: string
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - valueSetName
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmAttrValueSetValues:
    properties:
      key:
        type: string
      value:
        type: string
      valueSetId:
        type: number
        format: double
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - key
      - value
      - valueSetId
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmFlexibleEntities:
    properties:
      entityName:
        type: string
      entityDesc:
        type: string
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - entityName
      - entityDesc
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  PlmFlexibleEntitiesColumns:
    properties:
      entityId:
        type: number
        format: double
      entityFieldName:
        type: string
      dbColumnName:
        type: string
      id:
        type: number
        format: double
    required:
      - entityId
      - entityFieldName
      - dbColumnName
    additionalProperties: false
  PlmFlexibleEntityValues:
    properties:
      entityId:
        type: number
        format: double
      attr1:
        type: string
      attr2:
        type: string
      attr3:
        type: string
      attr4:
        type: string
      attr5:
        type: string
      attr6:
        type: string
      attr7:
        type: string
      attr8:
        type: string
      attr9:
        type: string
      attr10:
        type: string
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - entityId
      - createdAt
      - lastModifiedAt
    additionalProperties: false
  plmProductEntity:
    properties:
      productId:
        type: number
        format: double
      categoryId:
        type: number
        format: double
      status:
        enum:
          - Active
          - Draft
          - Pre-Numbering
        type: string
      version:
        default: 1
        type: number
        format: double
      isOwnLabel:
        default: false
        type: boolean
      brand:
        type: number
        format: double
      sellByType:
        type: number
        format: double
      promotionType:
        type: number
        format: double
      isSellable:
        default: false
        type: boolean
      isOrderable:
        default: false
        type: boolean
      createdAt:
        type: string
        format: date
      lastModifiedAt:
        type: string
        format: date
      createdBy:
        type: number
        format: double
      lastModifiedBy:
        type: number
        format: double
      id:
        type: number
        format: double
    required:
      - productId
      - status
      - version
      - isOwnLabel
      - brand
      - isSellable
      - isOrderable
      - createdAt
      - lastModifiedAt
    additionalProperties: false
